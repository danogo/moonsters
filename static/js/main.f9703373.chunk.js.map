{"version":3,"sources":["components/LoadingSpinner.js","components/ImageLoader.js","components/Card.js","containers/CardContainer.js","components/CardButton.js","components/Moon.js","components/Carousel.js","components/FailFetch.js","containers/CarouselContainer.js","App.js","serviceWorker.js","index.js"],"names":["LoadingSpinner","react_default","a","createElement","className","ImageLoader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleImageLoaded","setState","loading","renderSpinner","state","components_LoadingSpinner","_this$props","src","alt","onLoad","React","Component","Card","_ref","name","images","description","statistics","components_ImageLoader","big","style","width","concat","power","danger","frequency","CardContainer","card","error","_this2","fetch","slug","then","response","json","data","catch","isPending","components_Card","assign","CardButton","onClick","side","backgroundImage","thumb","index_es","icon","Moon","Carousel","classNames","cards","prevIndex","nextIndex","currentIndex","prevCard","nextCard","showCard","direction","react_transition_group","in","appear","timeout","components_Moon","childFactory","child","cloneElement","component","CardButton_CardButton","key","onmountOnExit","onEntered","el","classList","add","onExit","remove","containers_CardContainer","FailFetch","library","faAngleRight","faAngleLeft","CarouselContainer","prevState","length","getPrevIndex","currIndex","getNextIndex","undefined","_this$state","components_FailFetch","components_Carousel","App","CarouselContainer_CarouselContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gOAQeA,EANQ,WACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aC8BJC,cA9Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIRQ,kBAAoB,WAClBP,EAAKQ,SAAS,CAAEC,SAAS,KANRT,EASnBU,cAAgB,WACd,OAAKV,EAAKW,MAAMF,QAGTf,EAAAC,EAAAC,cAACgB,EAAD,MAFE,MATTZ,EAAKW,MAAQ,CAAEF,SAAS,GAFPT,wEAgBV,IAAAa,EACcV,KAAKJ,MAAlBe,EADDD,EACCC,IAAKC,EADNF,EACME,IACb,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEkB,IAAKA,EACLE,OAAQb,KAAKI,kBACbQ,IAAKA,IAENZ,KAAKO,wBA1BYO,IAAMC,WC+BjBC,EA/BF,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,OAAQC,EAAhBH,EAAgBG,YAAaC,EAA7BJ,EAA6BI,WAA7B,OACX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC6B,EAAD,CAAaX,IAAKQ,EAAOI,IAAKX,IAAI,cAGtCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UAAKyB,GAEHG,GACA9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAe0B,GAC5B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,cAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO8B,MAAO,CAACC,MAAK,GAAAC,OAAsB,IAAjBL,EAAWM,MAAhB,OAApC,SACrBpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO8B,MAAO,CAACC,MAAK,GAAAC,OAAuB,IAAlBL,EAAWO,OAAhB,OAApC,SACrBrC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO8B,MAAO,CAACC,MAAK,GAAAC,OAA0B,IAArBL,EAAWQ,UAAhB,OAApC,eCIpBC,cAzBb,SAAAA,EAAYlC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,IACjBjC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KAAMJ,KACDY,MAAQ,CACXuB,KAAM,KACNC,MAAO,IAJQnC,mFAQC,IAAAoC,EAAAjC,KAClBkC,MAAK,4DAAAR,OAA6D1B,KAAKJ,MAAMuC,OAC1EC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJN,EAAK5B,SAAS,iBAAO,CACnB0B,KAAMQ,EAAKA,UAGdC,MAAM,SAAAR,GAAK,OAAIC,EAAK5B,SAAS,iBAAO,CAAE2B,QAAOS,WAAW,wCAK3D,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD5C,OAAA6C,OAAA,GAAU3C,KAAKQ,MAAMuB,KAAU/B,KAAKJ,eAtBnBmB,qBCAf6B,EAAa,SAAA3B,GAAA,IAAEE,EAAFF,EAAEE,OAAQ0B,EAAV5B,EAAU4B,QAASC,EAAnB7B,EAAmB6B,KAAnB,OACxBvD,EAAAC,EAAAC,cAAA,UAAQoD,QAASA,EAAUnD,UAAS,sBAAAgC,OAAwBoB,IAC1DvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU8B,MAAO,CAACuB,gBAAe,OAAArB,OAASP,EAAO6B,MAAhB,QAErC,SAATF,EACEvD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAiBvD,UAAU,aAAawD,KAAK,gBAC7C3D,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAiBvD,UAAU,aAAawD,KAAK,wBCkBtCC,EAzBF,kBACX5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCsBJ0D,EA/BE,SAAAnC,GAAA,IARYoC,EAQTC,EAAHrC,EAAGqC,MAAOC,EAAVtC,EAAUsC,UAAWC,EAArBvC,EAAqBuC,UAAWC,EAAhCxC,EAAgCwC,aAAcC,EAA9CzC,EAA8CyC,SAAUC,EAAxD1C,EAAwD0C,SAAUC,EAAlE3C,EAAkE2C,SAAUC,EAA5E5C,EAA4E4C,UAA5E,OACftE,EAAAC,EAAAC,cAACqE,EAAA,cAAD,CACIC,GAAIH,EACJI,QAAQ,EACRX,WAAW,QACXY,QAAS,KAEX1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAACyE,EAAD,MACA3E,EAAAC,EAAAC,cAACqE,EAAA,gBAAD,CAAiBK,cApBMd,EAoB0C,SAAdQ,EAAuB,YAAc,YAnB5F,SAACO,GAAD,OACEtD,IAAMuD,aAAaD,EAAO,CACxBf,iBAiBsGiB,UAAW,MAC/G/E,EAAAC,EAAAC,cAAC8E,EAADzE,OAAA6C,OAAA,CAAYE,QAASa,EAAUZ,KAAK,QAAWQ,EAAMC,OACnDhE,EAAAC,EAAAC,cAACqE,EAAA,cAAD,CACEU,IAAKlB,EAAMG,GAAcvC,KACzBmC,WAA0B,SAAdQ,EAAuB,YAAc,YACjDI,QAAS,IACTD,QAAQ,EACRS,eAAa,EACbC,UAAW,SAAAC,GAAE,OAAIA,EAAGC,UAAUC,IAAI,oBAClCC,OAAQ,SAAAH,GAAE,OAAIA,EAAGC,UAAUG,OAAO,qBAElCxF,EAAAC,EAAAC,cAACuF,EAAkB1B,EAAMG,KAE7BlE,EAAAC,EAAAC,cAAC8E,EAADzE,OAAA6C,OAAA,CAAYE,QAASc,EAAUb,KAAK,SAAYQ,EAAME,WCjC/CyB,EAJG,kBAChB1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,wECGFwF,IAAQL,IAAIM,IAAcC,SAELC,cACnB,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,IACjBxF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,KAqBR+D,SAAW,WACT9D,EAAKQ,SAAS,SAACiF,GACb,MAAO,CACL7B,aAAc6B,EAAU7B,eAAiB6B,EAAUhC,MAAMiC,OAAS,EAAI,EAAID,EAAU7B,aAAe,EACnGI,UAAW,WA1BEhE,EA+BnB6D,SAAW,WACT7D,EAAKQ,SAAS,SAACiF,GACb,MAAO,CACL7B,aAAyC,IAA3B6B,EAAU7B,aAAqB6B,EAAUhC,MAAMiC,OAAS,EAAID,EAAU7B,aAAe,EACnGI,UAAW,WAnCEhE,EAwCnB2F,aAAe,WACb,IAAMC,EAAY5F,EAAKW,MAAMiD,aAC7B,OAAkB,IAAdgC,EACK5F,EAAKW,MAAM8C,MAAMiC,OAAS,EAE5BE,EAAY,GA7CF5F,EAgDnB6F,aAAe,WACb,IAAMD,EAAY5F,EAAKW,MAAMiD,aAC7B,OAAIgC,IAAc5F,EAAKW,MAAM8C,MAAMiC,OAAS,EACnC,EAEFE,EAAY,GAnDnB5F,EAAKW,MAAQ,CACX8C,MAAO,GACPtB,MAAO,GACPyB,aAAc,EACdhB,WAAW,EACXmB,UAAU,EACVC,eAAW8B,GARI9F,mFAYC,IAAAoC,EAAAjC,KAClBA,KAAKK,SAAS,CAACoC,WAAW,IAC1BP,MAAM,6DACHE,KAAK,SAAAC,GACF,OAAOA,EAASC,SAEnBF,KAAK,SAAAG,GAAI,OAAIN,EAAK5B,SAAS,iBAAO,CAAEiD,MAAOf,EAAKA,KAAME,WAAW,EAAOmB,UAAU,OAClFpB,MAAM,SAAAR,GAAK,OAAIC,EAAK5B,SAAS,iBAAO,CAAE2B,QAAOS,WAAW,wCAsCpD,IAAAmD,EACoB5F,KAAKQ,MAAzBiC,EADAmD,EACAnD,UACP,OAFOmD,EACW5D,MAETzC,EAAAC,EAAAC,cAACoG,EAAD,MAGLpD,GAAyC,IAA5BzC,KAAKQ,MAAM8C,MAAMiC,OACzBhG,EAAAC,EAAAC,cAACgB,EAAD,MAGFlB,EAAAC,EAAAC,cAACqG,EAADhG,OAAA6C,OAAA,GAAc3C,KAAKQ,MAAnB,CAA0B+C,UAAWvD,KAAKwF,aAAchC,UAAWxD,KAAK0F,aAAchC,SAAU1D,KAAK0D,SAAUC,SAAU3D,KAAK2D,mBApE1F5C,aCKhCgF,mLARX,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuG,EAAD,cAJUjF,yBCSEkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,KAAK,SAAA0E,GACjCA,EAAaC","file":"static/js/main.f9703373.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"spinner\"></div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner;","import React from \"react\";\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nclass ImageLoader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: true };\r\n  }\r\n\r\n  handleImageLoaded = () => {\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  renderSpinner = () => {\r\n    if (!this.state.loading) {\r\n      return null;\r\n    }\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return (\r\n      <div className=\"image\">\r\n        <img\r\n          src={src}\r\n          onLoad={this.handleImageLoaded}\r\n          alt={alt}\r\n        />\r\n        {this.renderSpinner()}\r\n      </div>  \r\n    );\r\n  }\r\n}\r\nexport default ImageLoader;","import React from 'react';\r\nimport ImageLoader from './ImageLoader';\r\n\r\nconst Card = ({name, images, description, statistics}) => (\r\n  <div className=\"spaceship\">\r\n    <div className=\"spaceship__top\">\r\n      <div className=\"capsule\">\r\n        <ImageLoader src={images.big} alt=\"monster\"/>\r\n      </div>\r\n    </div>\r\n    <div className=\"spaceship__bottom\">\r\n      <h3>{name}</h3>\r\n      {\r\n        statistics && \r\n        <div className=\"info\">\r\n          <p className=\"description\">{description}</p>\r\n          <div className=\"stats\">\r\n            <div className=\"labels\">\r\n              <p className=\"label\">power</p>\r\n              <p className=\"label\">danger</p>\r\n              <p className=\"label\">frequency</p>\r\n            </div>\r\n            <div className=\"charts\">\r\n              <p className=\"chart\"><span className=\"data\" style={{width: `${statistics.power*100}%`}}>&nbsp;</span></p>\r\n              <p className=\"chart\"><span className=\"data\" style={{width: `${statistics.danger*100}%`}}>&nbsp;</span></p>\r\n              <p className=\"chart\"><span className=\"data\" style={{width: `${statistics.frequency*100}%`}}>&nbsp;</span></p>\r\n            </div>\r\n          </div>\r\n        </div> \r\n      }  \r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nclass CardContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      card: null,\r\n      error: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://monsters-api-danogo.herokuapp.com/api/v1/monster/${this.props.slug}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState(() => ({\r\n          card: data.data\r\n        }))\r\n      })\r\n      .catch(error => this.setState(() => ({ error, isPending: false })));\r\n  }\r\n\r\n\r\n  render() {\r\n    return <Card {...this.state.card} {...this.props}/>;\r\n  }\r\n}\r\n\r\nexport default CardContainer;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const CardButton = ({images, onClick, side}) => (\r\n  <button onClick={onClick}  className={`card-btn card-btn--${side}`}>\r\n    <div className='capsule' style={{backgroundImage: `url(${images.thumb})`}}></div>\r\n    {\r\n      side === 'left'\r\n      ? <FontAwesomeIcon className=\"icon-angle\" icon=\"angle-right\" />\r\n      : <FontAwesomeIcon className=\"icon-angle\" icon=\"angle-left\" />\r\n    }\r\n    \r\n  </button>\r\n);","import React from 'react';\r\n\r\nconst Moon = () => (\r\n  <div className=\"moon\">\r\n    <div className=\"crater-b-1\"></div>\r\n    <div className=\"rotated-b-2\">\r\n      <div className=\"crater-b-2\"></div>\r\n    </div>\r\n    \r\n    <div className=\"crater-m-1\"></div> \r\n    <div className=\"crater-m-2\"></div>\r\n    <div className=\"crater-m-3\"></div>\r\n    \r\n    <div className=\"crater-s-1\"></div>\r\n    <div className=\"crater-s-2\"></div>\r\n    <div className=\"rotated-s-3\">\r\n      <div className=\"crater-s-3\"></div>\r\n    </div>\r\n    <div className=\"crater-s-4\"></div>\r\n    \r\n    <div className=\"side-crater-1\"></div>\r\n    <div className=\"side-crater-2\"></div>\r\n    <div className=\"side-crater-3\"></div>\r\n    <div className=\"side-crater-4\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Moon;","import React from 'react';\r\nimport CardContainer from '../containers/CardContainer';\r\nimport { CardButton } from './CardButton';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Moon from './Moon';\r\n\r\nconst childFactoryCreator = (classNames) => (\r\n  (child) => (\r\n    React.cloneElement(child, {\r\n      classNames\r\n    })\r\n  )\r\n);\r\n\r\nconst Carousel = ({ cards, prevIndex, nextIndex, currentIndex, prevCard, nextCard, showCard, direction }) => (\r\n  <CSSTransition \r\n      in={showCard}\r\n      appear={true}\r\n      classNames=\"space\"\r\n      timeout={2000}\r\n    >\r\n    <div className=\"space\">\r\n      <div className=\"starfield-big\"></div>\r\n      <div className=\"starfield-medium\"></div>\r\n      <div className=\"starfield-small\"></div>\r\n      <Moon />\r\n      <TransitionGroup childFactory={childFactoryCreator(direction === 'next' ? 'card-next' : 'card-prev')} component={null}>\r\n        <CardButton onClick={prevCard} side=\"left\" {...cards[prevIndex()]}/>\r\n          <CSSTransition\r\n            key={cards[currentIndex].name}\r\n            classNames={direction === 'next' ? 'card-next' : 'card-prev'}\r\n            timeout={600}\r\n            appear={true}\r\n            onmountOnExit\r\n            onEntered={el => el.classList.add('spaceship--open')}\r\n            onExit={el => el.classList.remove('spaceship--open')}\r\n          > \r\n            <CardContainer {...cards[currentIndex]}/>\r\n          </CSSTransition>\r\n        <CardButton onClick={nextCard} side=\"right\" {...cards[nextIndex()]}/>\r\n      </TransitionGroup>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n    \r\nexport default Carousel;\r\n\r\n","import React from 'react';\r\n\r\nconst FailFetch = () => (\r\n  <p className=\"fail-fetch\">Monsters are busy right now, please try again later.</p>\r\n);\r\n  \r\nexport default FailFetch;","import React, { Component } from 'react';\r\nimport Carousel from '../components/Carousel';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport FailFetch from '../components/FailFetch';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faAngleRight, faAngleLeft);\r\n\r\nexport default class CarouselContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: [],\r\n      error: '',\r\n      currentIndex: 0,\r\n      isPending: false,\r\n      showCard: false,\r\n      direction: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isPending: true});\r\n    fetch('https://monsters-api-danogo.herokuapp.com/api/v1/monsters')\r\n      .then(response => {\r\n          return response.json();\r\n       })\r\n      .then(data => this.setState(() => ({ cards: data.data, isPending: false, showCard: true })))\r\n      .catch(error => this.setState(() => ({ error, isPending: false })));\r\n  }\r\n\r\n  nextCard = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        currentIndex: prevState.currentIndex === prevState.cards.length - 1 ? 0 : prevState.currentIndex + 1,\r\n        direction: 'next'\r\n      }\r\n    });\r\n  }\r\n\r\n  prevCard = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        currentIndex: prevState.currentIndex === 0 ? prevState.cards.length - 1 : prevState.currentIndex - 1,\r\n        direction: 'prev'\r\n      }\r\n    });\r\n  }\r\n\r\n  getPrevIndex = () => {\r\n    const currIndex = this.state.currentIndex;\r\n    if (currIndex === 0) {\r\n      return this.state.cards.length - 1;\r\n    }\r\n    return currIndex - 1;\r\n  }\r\n\r\n  getNextIndex = () => {\r\n    const currIndex = this.state.currentIndex;\r\n    if (currIndex === this.state.cards.length - 1) {\r\n      return 0;\r\n    }\r\n    return currIndex + 1;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {isPending, error} = this.state;\r\n    if (error) {\r\n      return <FailFetch />;\r\n    }\r\n  \r\n    if (isPending || this.state.cards.length === 0) {\r\n      return <LoadingSpinner/>;\r\n    }\r\n\r\n    return <Carousel {...this.state} prevIndex={this.getPrevIndex} nextIndex={this.getNextIndex} prevCard={this.prevCard} nextCard={this.nextCard}/>\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport CarouselContainer from './containers/CarouselContainer'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CarouselContainer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}